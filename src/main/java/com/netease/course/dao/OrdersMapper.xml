<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
				"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.netease.course.dao.OrdersDao">

	<resultMap id="ordersResultMap" type="orders">
		<id column="orders_id" property="ordersId" jdbcType="INTEGER" />
		<result column="orders_price" property="ordersPrice" jdbcType="DOUBLE" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<association column="user_id" property="user" javaType="user">
			<id column="uid" property="userId" jdbcType="INTEGER" />
			<result column="user_name" property="userName" jdbcType="VARCHAR" />
			<result column="user_password" property="userPassword"
				jdbcType="VARCHAR" />
			<result column="user_type" property="userType" jdbcType="TINYINT" />
		</association>
		<association column="product_id" property="product"
			javaType="product">
			<id column="pid" property="productId" jdbcType="INTEGER" />
			<result column="product_title" property="productTitle"
				jdbcType="VARCHAR" />
			<result column="product_image" property="productImage"
				jdbcType="VARCHAR" />
			<result column="product_detail" property="productDetail"
				jdbcType="VARCHAR" />
			<result column="product_price" property="productPrice"
				jdbcType="DOUBLE" />
			<result column="product_summary" property="productSummary"
				jdbcType="VARCHAR" />
			<result column="is_sell" property="isSell" jdbcType="BIT" />
		</association>
	</resultMap>

	<insert id="insert" parameterType="orders">
		insert into orders
		(
		<include refid="Column" />
		)
		values(#{user.userId},#{product.productId},#{ordersPrice},#{state.value})
	</insert>

	<delete id="delete" parameterType="orders">
		delete from orders where
		orders_id=#{ordersId}
	</delete>

	<update id="update" parameterType="orders">
		update orders set
		user_id=#{userId},
		product_id=#{productId},
		orders_price=#{ordersPrice},
		state=#{state.value}
		where
		orders_id=#{ordersId}
	</update>

	<select id="selectAll" resultMap="ordersResultMap">
		SELECT
		orders.orders_id, 
		orders.user_id, 
		orders.product_id,
		orders.orders_price, 
		orders.state, 
		product.product_id AS pid,
		product.product_title, 
		product.product_image, 
		product.product_detail,
		product.product_price, 
		product.product_summary, 
		product.is_sell,
		`user`.user_id AS uid, 
		`user`.user_name, 
		`user`.user_password,
		`user`.user_type 
		FROM orders 
		LEFT JOIN product ON orders.product_id=product.product_id 
		LEFT JOIN `user` ON orders.user_id = user.user_id
	</select>
	
	<select id="selectOrders" parameterType="user" resultMap="ordersResultMap">
		SELECT
		orders.orders_id, 
		orders.user_id, 
		orders.product_id,
		orders.orders_price, 
		orders.state, 
		product.product_id AS pid,
		product.product_title, 
		product.product_image, 
		product.product_detail,
		product.product_price, 
		product.product_summary, 
		product.is_sell,
		`user`.user_id AS uid, 
		`user`.user_name, 
		`user`.user_password,
		`user`.user_type 
		FROM orders 
		LEFT JOIN product ON orders.product_id=product.product_id 
		LEFT JOIN `user` ON orders.user_id = user.user_id 
		<if test="userId!=null">
			WHERE orders.user_id = #{userId}
		</if>
	</select>

	<sql id="Column">
		user_id, product_id, orders_price, state
	</sql>

</mapper>